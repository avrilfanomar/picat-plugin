package com.github.avrilfanomar.picatplugin.language.parser

import com.github.avrilfanomar.picatplugin.language.PicatLanguage
import com.github.avrilfanomar.picatplugin.language.lexer.PicatLexer
import com.github.avrilfanomar.picatplugin.language.psi.PicatFile
import com.github.avrilfanomar.picatplugin.language.psi.PicatTokenTypes
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatRuleImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatExpressionImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatTermImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatFactImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatExportStatementImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatImportStatementImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatPredicateIndicatorImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatIncludeStatementImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatHeadImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatBodyImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatGoalImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatModuleNameImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatAtomImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatIdentifierImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatStructureImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatArgumentImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatArgumentListImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatFunctionDefinitionImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatPredicateDefinitionImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatListImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatListElementsImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatLiteralImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatVariableImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatPredicateBodyImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatOperatorImpl
import com.github.avrilfanomar.picatplugin.language.psi.impl.PicatPsiElementImpl
import com.intellij.lang.ASTNode
import com.intellij.lang.ParserDefinition
import com.intellij.lang.PsiParser
import com.intellij.lexer.Lexer
import com.intellij.openapi.project.Project
import com.intellij.psi.FileViewProvider
import com.intellij.psi.PsiElement
import com.intellij.psi.PsiFile
import com.intellij.psi.tree.IFileElementType
import com.intellij.psi.tree.TokenSet

/**
 * Parser definition for Picat language.
 * Connects the lexer, parser, and PSI elements.
 *
 * Note: PicatParser and PicatTypes will be generated by the Grammar-Kit plugin
 * based on the BNF grammar file. This is a placeholder implementation.
 */
class PicatParserDefinition : ParserDefinition {

    override fun createLexer(project: Project): Lexer = PicatLexer()

    override fun createParser(project: Project): PsiParser = PicatParser()

    override fun getFileNodeType(): IFileElementType = FILE

    override fun getCommentTokens(): TokenSet = PicatTokenSets.COMMENTS

    override fun getStringLiteralElements(): TokenSet = PicatTokenSets.STRINGS

    override fun createElement(node: ASTNode): PsiElement {
        val type = node.elementType
        return when (type) {
            PicatTokenTypes.RULE -> PicatRuleImpl(node)
            PicatTokenTypes.EXPRESSION -> PicatExpressionImpl(node)
            PicatTokenTypes.TERM -> PicatTermImpl(node)
            PicatTokenTypes.FACT -> PicatFactImpl(node)
            PicatTokenTypes.EXPORT_STATEMENT -> PicatExportStatementImpl(node)
            PicatTokenTypes.IMPORT_STATEMENT -> PicatImportStatementImpl(node)
            PicatTokenTypes.PREDICATE_INDICATOR -> PicatPredicateIndicatorImpl(node)
            PicatTokenTypes.INCLUDE_STATEMENT -> PicatIncludeStatementImpl(node)
            PicatTokenTypes.HEAD -> PicatHeadImpl(node)
            PicatTokenTypes.BODY -> PicatBodyImpl(node)
            PicatTokenTypes.GOAL -> PicatGoalImpl(node)
            PicatTokenTypes.MODULE_NAME -> PicatModuleNameImpl(node)
            PicatTokenTypes.ATOM -> PicatAtomImpl(node)
            PicatTokenTypes.IDENTIFIER -> PicatIdentifierImpl(node)
            PicatTokenTypes.STRUCTURE -> PicatStructureImpl(node)
            PicatTokenTypes.ARGUMENT -> PicatArgumentImpl(node)
            PicatTokenTypes.ARGUMENT_LIST -> PicatArgumentListImpl(node)
            PicatTokenTypes.FUNCTION_DEFINITION -> PicatFunctionDefinitionImpl(node)
            PicatTokenTypes.PREDICATE_DEFINITION -> PicatPredicateDefinitionImpl(node)
            PicatTokenTypes.LIST -> PicatListImpl(node)
            PicatTokenTypes.LIST_ELEMENTS -> PicatListElementsImpl(node)
            PicatTokenTypes.LITERAL -> PicatLiteralImpl(node)
            PicatTokenTypes.VARIABLE -> PicatVariableImpl(node)
            PicatTokenTypes.PREDICATE_BODY -> PicatPredicateBodyImpl(node)
            PicatTokenTypes.OPERATOR -> PicatOperatorImpl(node)
            else -> PicatPsiElementImpl(node)
        }
    }

    override fun createFile(viewProvider: FileViewProvider): PsiFile = PicatFile(viewProvider)
}

val FILE = IFileElementType(PicatLanguage)
